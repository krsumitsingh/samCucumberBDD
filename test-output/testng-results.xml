<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="0" total="4" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="14178" started-at="2020-09-11T06:09:15Z" finished-at="2020-09-11T06:09:29Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="14178" started-at="2020-09-11T06:09:15Z" finished-at="2020-09-11T06:09:29Z">
      <class name="testScripts.loginPage.LoginTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="beforeSuite" is-config="true" duration-ms="176" started-at="2020-09-11T11:39:15Z" finished-at="2020-09-11T11:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="beforeTest" is-config="true" duration-ms="6306" started-at="2020-09-11T11:39:15Z" finished-at="2020-09-11T11:39:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="beforeClass" is-config="true" duration-ms="3855" started-at="2020-09-11T11:39:21Z" finished-at="2020-09-11T11:39:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-09-11T11:39:26Z" finished-at="2020-09-11T11:39:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.loginPage.LoginTest.loginTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="loginTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="loginTest" duration-ms="2136" started-at="2020-09-11T11:39:26Z" data-provider="testData" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mngr283898]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gUdudUb]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="afterMethod" is-config="true" duration-ms="300" started-at="2020-09-11T11:39:28Z" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=LoginTest.loginTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="loginTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="loginTest" duration-ms="2" started-at="2020-09-11T11:39:28Z" data-provider="testData" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gUdudUb]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Run mode for this set of data is marked N]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Run mode for this set of data is marked N
	at testScripts.loginPage.LoginTest.loginTest(LoginTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-09-11T11:39:28Z" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.loginPage.LoginTest.loginTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="afterMethod" is-config="true" duration-ms="94" started-at="2020-09-11T11:39:28Z" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SKIP method=LoginTest.loginTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-09-11T11:39:28Z" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.loginPage.LoginTest.loginTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="loginTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="loginTest" duration-ms="0" started-at="2020-09-11T11:39:28Z" data-provider="testData" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mngr283898]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[intel@01]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Run mode for this set of data is marked N]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Run mode for this set of data is marked N
	at testScripts.loginPage.LoginTest.loginTest(LoginTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="afterMethod" is-config="true" duration-ms="64" started-at="2020-09-11T11:39:28Z" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SKIP method=LoginTest.loginTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-09-11T11:39:28Z" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testScripts.loginPage.LoginTest.loginTest(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="loginTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="loginTest" duration-ms="0" started-at="2020-09-11T11:39:28Z" data-provider="testData" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@01]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Run mode for this set of data is marked N]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Run mode for this set of data is marked N
	at testScripts.loginPage.LoginTest.loginTest(LoginTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="afterMethod" is-config="true" duration-ms="46" started-at="2020-09-11T11:39:28Z" finished-at="2020-09-11T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SKIP method=LoginTest.loginTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testScripts.loginPage.LoginTest@61a485d2]" name="afterTest" is-config="true" duration-ms="675" started-at="2020-09-11T11:39:28Z" finished-at="2020-09-11T11:39:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testScripts.loginPage.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
